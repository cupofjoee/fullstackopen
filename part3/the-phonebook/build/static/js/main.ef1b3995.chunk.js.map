{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","onSubmit","nameValue","nameOnChange","numberValue","numberOnChange","type","Person","person","deletePerson","name","number","onClick","window","confirm","baseUrl","axios","get","then","response","data","newPerson","post","id","console","log","put","delete","Notification","message","isError","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setMessage","setIsError","useEffect","personService","initialData","catch","error","length","updatePersonId","changedPerson","map","filter","setTimeout","personsToShow","toLowerCase","includes","event","target","preventDefault","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef1b3995.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n\r\n  return (\r\n      <div>\r\n          filter shown with<input\r\n            value={value}\r\n            onChange={onChange}\r\n          />\r\n      </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({ onSubmit, nameValue, nameOnChange, numberValue, numberOnChange}) => {\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n        <div>\r\n          name: <input\r\n            value={nameValue}\r\n            onChange={nameOnChange} \r\n          />\r\n        </div>\r\n        <div>\r\n            number: <input\r\n                value={numberValue}\r\n                onChange={numberOnChange}\r\n            />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({ person, deletePerson }) => {\r\n\r\n    const confirmDelete = () => {\r\n        const result = window.confirm(`Delete ${person.name}?`)\r\n        if (result) {\r\n            return deletePerson()\r\n        }\r\n    }\r\n    \r\n    return  (\r\n    <p>\r\n        {person.name} {person.number}\r\n        <button onClick={confirmDelete}>delete</button>\r\n    </p>\r\n    )\r\n}\r\n\r\nexport default Person","import axios from 'axios'\r\n\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n    const response = axios.get(baseUrl)\r\n    return response.then(response => response.data)\r\n}\r\n\r\nconst create = (newPerson) => {\r\n    const response = axios.post(baseUrl, newPerson)\r\n    return response.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n    console.log(id)\r\n    console.log(newPerson)\r\n    const response = axios.put(`${baseUrl}/${id}`, newPerson)\r\n    return response.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson }","import React from 'react'\r\n\r\nconst Notification = ({ message, isError }) => {\r\n    if (message == null) {\r\n        return null\r\n    }\r\n\r\n    const style = {\r\n        color: isError ? \"red\" : \"green\",\r\n        background: \"lightgrey\",\r\n        fontSize: 20,\r\n        borderStyle: \"solid\",\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10\r\n    }\r\n\r\n    return (\r\n        <div style={style}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Person from './components/Person'\r\nimport personService from './services/persons'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ newFilter, setNewFilter ] = useState('')\r\n  const [ message, setMessage ] = useState(null)\r\n  const [ isError, setIsError ] = useState(false)\r\n\r\n  const hook = () => {\r\n    personService\r\n      .getAll()\r\n      .then(initialData => {setPersons(initialData)})\r\n      .catch(error => console.log('fail'))\r\n  }\r\n\r\n  useEffect(hook, [])\r\n\r\n  console.log(\"We have \" + persons.length + \" contacts\")\r\n\r\n  const handleNameChange = (event) => {\r\n      setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n      setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n      setNewFilter(event.target.value)\r\n  }\r\n\r\n  const addPerson = (event) => {\r\n      event.preventDefault()\r\n      var person\r\n      for (person of persons) {\r\n          if (person.name.toLowerCase() === newName.toLowerCase()) {\r\n            console.log(\"duplicate name\")\r\n            console.log(person)\r\n            console.log(person.id)\r\n            updatePersonId(person.id, {...person, number: newNumber})\r\n            console.log(\"after update, before null\")\r\n            return null\r\n          }\r\n      }\r\n      const newPerson = {\r\n          name: newName,\r\n          number: newNumber\r\n      }\r\n      personService\r\n        .create(newPerson)\r\n        .then(person => {\r\n          setPersons(persons.concat(newPerson))\r\n          setNewName(\"\")\r\n          setNewNumber(\"\")\r\n          setMessage(`Added ${person.name}`)\r\n          setIsError(false)\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 5000)\r\n        })\r\n\r\n  }\r\n\r\n  const updatePersonId = (id, changedPerson) => {\r\n    const result = window.confirm(`${changedPerson.name} is already added to phonebook,\\\r\n    replace the old number with a new one?`)\r\n    if (result) {\r\n      personService\r\n        .update(id, changedPerson)\r\n        .then(changedPerson => {\r\n          setPersons(persons.map(person => person.id !== id ? person : changedPerson))\r\n        })\r\n        .catch(error => {\r\n          setMessage(`Information of ${changedPerson.name} has already been removed from server`)\r\n          setIsError(true)\r\n          setPersons(persons.filter(person => person.id !== id))\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 5000)\r\n        })\r\n        setNewName(\"\")\r\n        setNewNumber(\"\")\r\n    }\r\n  }\r\n  \r\n  const deletePersonId = (id) => {\r\n    personService.deletePerson(id)\r\n    setPersons(persons.filter(person => person.id != id))\r\n  }\r\n\r\n  const personsToShow = persons.filter((person) => \r\n        person.name.toLowerCase().includes(newFilter))\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} isError={isError} />\r\n      <Filter value={newFilter} onChange={handleFilterChange} />\r\n      <h2>add a new</h2>\r\n      <PersonForm \r\n        onSubmit={addPerson} \r\n        nameValue={newName} \r\n        nameOnChange={handleNameChange}\r\n        numberValue={newNumber}\r\n        numberOnChange={handleNumberChange}\r\n      />\r\n      <h2>Numbers</h2>\r\n        {personsToShow.map(person => \r\n          <Person person={person} deletePerson={() => deletePersonId(person.id)} />\r\n        )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}