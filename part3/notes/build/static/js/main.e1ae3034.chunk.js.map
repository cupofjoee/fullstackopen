{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","services/login.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","token","axios","get","then","response","data","newObject","config","headers","Authorization","post","id","put","newToken","Notification","message","login","credentials","a","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","useEffect","noteService","handleNoteChange","event","target","value","handleLogin","preventDefault","loginService","window","localStorage","setItem","JSON","stringify","setTimeout","addNote","noteObject","length","date","Date","toISOString","Math","random","concat","notesToShow","filter","onSubmit","type","name","onChange","map","key","find","changedNote","returnedNote","catch","error","n","toggleImportanceId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1ae3034.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/notes'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const create = newObject => {\r\n    const config = {\r\n      headers: { Authorization: token },\r\n    }\r\n    const request = axios.post(baseUrl, newObject, config)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n\r\nexport default { getAll, create, update, setToken }\r\n\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message == null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className='error'>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\nconst baseUrl = 'api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\nimport Notification from \"./components/Notification\"\nimport loginService from './services/login'\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  const hook = () => {\n    noteService.getAll().then((notes) => {\n      setNotes(notes);\n    });\n  };\n\n  useEffect(hook, []);\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n\n      window.localStorage.setItem(\n        'loggedNoteappUser', JSON.stringify(user)\n      )\n\n      noteService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }n    }\n  }\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      id: notes.length + 1,\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n\n    noteService.create(noteObject).then((note) => {\n      setNotes(notes.concat(note));\n      setNewNote(\"\");\n    });\n  };\n\n  const toggleImportanceId = (id) => {\n    const note = notes.find((note) => note.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote).then((returnedNote) => {\n      setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n    }).catch(error => {\n      setErrorMessage(\n        `Note ${note.content} was already removed from server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setNotes(notes.filter(n => n.id !== id))\n    });\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  const loginForm = () => {\n    return (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n        <input\n        type=\"text\"\n        value={username}\n        name=\"Username\"\n        onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n        <input\n        type=\"password\"\n        value={password}\n        name=\"Password\"\n        onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>)\n  }\n\n  const noteForm = () => {\n    return (\n      <form onSubmit={addNote}>\n        <input \n          value={newNote} \n          onChange={handleNoteChange} \n        />\n        <button type=\"submit\">save</button>\n      </form>\n    )\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      \n      {user === null\n        ? loginForm()\n        : (\n          <div>\n            <p>{user.name} logged-in</p>\n            {noteForm()}\n          </div>\n        )\n      }\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceId(note.id)}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}