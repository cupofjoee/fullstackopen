{"version":3,"sources":["components/Note.js","components/LoginForm.js","components/NoteForm.js","services/notes.js","components/Notification.js","services/login.js","components/Togglable.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","type","value","name","onChange","NoteForm","createNote","useState","newNote","setNewNote","event","preventDefault","Math","random","target","token","axios","get","then","response","data","newObject","config","headers","Authorization","post","id","put","newToken","Notification","message","login","credentials","a","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","show","children","hide","App","notes","setNotes","showAll","setShowAll","errorMessage","setErrorMessage","setUsername","setPassword","user","setUser","useEffect","noteService","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","loginService","setItem","stringify","setTimeout","noteFormRef","useRef","addNote","noteObject","concat","current","notesToShow","filter","removeItem","map","key","find","changedNote","returnedNote","catch","error","n","toggleImportanceId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8268435e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import React from 'react'\n\nconst LoginForm = ({\n  handleSubmit,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n          <input\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <div>\n          password\n          <input\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginForm","import React, { useState } from 'react'\n\nconst NoteForm = ({ createNote }) => {\n  const [newNote, setNewNote] = useState(\"\")\n\n  const addNote = (event) => {\n    event.preventDefault();\n    createNote({\n      content: newNote,\n      important: Math.random() < 0.5,\n    }) ;\n    setNewNote(\"\")\n  };\n\n  return (\n    <div>\n      <form onSubmit={addNote}>\n        <input\n          type=\"text\"\n          value={newNote} \n          onChange={({ target }) => setNewNote(target.value)} \n        />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default NoteForm","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/notes'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\nconst create = newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const request = axios.post(baseUrl, newObject, config)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n  \r\n\r\nexport default { getAll, create, update, setToken }\r\n\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message == null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className='error'>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\nconst baseUrl = 'api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useImperativeHandle, useState } from 'react'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(true)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {toggleVisibility}\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={() => setVisible(true)}>{props.show}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={() => setVisible(false)}>{props.hide}</button>\n      </div>\n    </div>\n  )\n})\n\nexport default Togglable","import React, { useState, useEffect, useRef } from \"react\";\nimport Note from \"./components/Note\";\nimport LoginForm from \"./components/LoginForm\"\nimport NoteForm from \"./components/NoteForm\"\nimport noteService from \"./services/notes\";\nimport Notification from \"./components/Notification\"\nimport loginService from './services/login'\nimport Togglable from \"./components/Togglable\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [loginVisible, setLoginVisible] = useState(false)\n\n  useEffect(() => {\n    noteService.getAll().then((notes) => {\n      setNotes(notes)\n    })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      noteService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogout = () => {\n    setUser(null)\n    noteService.setToken(null)\n    window.localStorage.removeItem('loggedNoteappUser')\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n\n      window.localStorage.setItem(\n        'loggedNoteappUser', JSON.stringify(user)\n      )\n\n      noteService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }n    }\n  }\n\n  const noteFormRef = useRef()\n\n  const addNote = (noteObject) => {\n    noteService.create(noteObject).then((note) => {\n      setNotes(notes.concat(note));\n      noteFormRef.current.toggleVisibility()\n    });\n  }\n\n  const toggleImportanceId = (id) => {\n    const note = notes.find((note) => note.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote).then((returnedNote) => {\n      setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n    }).catch(error => {\n      setErrorMessage(\n        `Note ${note.content} was already removed from server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setNotes(notes.filter(n => n.id !== id))\n    });\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  const noteForm = () => {\n    return (\n      <Togglable show=\"create\" hide=\"cancel\" ref={noteFormRef}>\n        <NoteForm createNote={addNote}/>\n      </Togglable>\n    )\n  }\n\n  const loginForm = () => {\n    return (\n      <Togglable show=\"log in\" hide=\"cancel\">\n        <LoginForm\n            username={username}\n            password={password}\n            handleUsernameChange={({ target }) => setUsername(target.value)}\n            handlePasswordChange={({ target }) => setPassword(target.value)}\n            handleSubmit={handleLogin}\n        />\n      </Togglable>\n    )\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      \n      {user === null\n        ? loginForm()\n        : (\n          <div>\n            {user.name} logged-in\n            <button onClick={() => handleLogout()}>logout</button>\n            {noteForm()}\n          </div>\n        )\n      }\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceId(note.id)}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}